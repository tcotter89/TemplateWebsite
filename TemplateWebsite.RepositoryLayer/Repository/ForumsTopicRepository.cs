using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TemplateWebsite.Shared.Repository;
using TemplateWebsite.Shared.Models;
using TemplateWebsite.RepositoryLayer.Entities;
using TemplateWebsite.RepositoryLayer.Converters;

namespace TemplateWebsite.RepositoryLayer.Repository 
{
    public class ForumsTopicRepository : BaseRepository, IForumsTopicRepository 
    {
        public List<ModelForumsTopic> GetAllTopicsOfForum(int forumID) {
            var entities = dbContext.ForumsTopics.Where(t => t.ForumID == forumID);
            List<ModelForumsTopic> models = new List<ModelForumsTopic>();
            
            //only convert and find additional data if some topics were found
            if (entities.Count() > 0) {
                foreach (var entity in entities) {
                    models.Add(GetExtraTopicData(entity));
                };
            }
            return models;
        }
        public ModelForumsTopic GetTopic(int topicID) {
            var entity = dbContext.ForumsTopics.SingleOrDefault(t => t.TopicID == topicID);
            ModelForumsTopic model;

            //only convert and find additional data if the topic was found
            if (entity != null) {
                model = GetExtraTopicData(entity);
            } else {
                model = new ModelForumsTopic();
            }
            return model;
        }
        public ModelForumsTopic GetTopic(string title) {
            var entity = dbContext.ForumsTopics.SingleOrDefault(t => t.Title == title);
            ModelForumsTopic model;

            //only convert and find additional data if the topic was found
            if (entity != null) {
                model = GetExtraTopicData(entity);
            } else {
                model = new ModelForumsTopic();
            }
            return model;
        }
        internal ModelForumsTopic GetExtraTopicData(ForumsTopic entity) {
            int postCount = dbContext.ForumsPosts.Where(p => p.TopicID == entity.TopicID).Count();
            var results = dbContext.ForumsPosts
                            .Join(dbContext.WebsiteUsers,
                                p => p.UserID,
                                w => w.UserID,
                                (p, w) => new { ForumsPost = p, WebsiteUsers = w })
                            .Where(p => p.ForumsPost.TopicID == entity.TopicID)
                            .OrderBy(p => p.ForumsPost.PostDate)
                            .Select(w => new { lastPosterName = w.WebsiteUsers.Username, lastPostDate = w.ForumsPost.PostDate })
                            .FirstOrDefault();
            return entity.ConvertEntityToModel(dbContext, postCount, results.lastPosterName, results.lastPostDate);
        }
        public int AddTopic(ModelForumsTopic model) {
            using (WebsiteDatabaseEntities insertContext = new WebsiteDatabaseEntities()) {
                var entity = model.ConvertModelToEntity(insertContext);
                insertContext.ForumsTopics.Add(entity);
                insertContext.SaveChanges();
                return entity.TopicID;  //auto-generated by the database when .SaveChanges() is called
            }
        }
    }
}
